// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XAFContaApp.Module.BusinessObjects;

#nullable disable

namespace XAFContaApp.Module.Migrations
{
    [DbContext(typeof(XAFContaAppEFCoreDbContext))]
    [Migration("20250127145003_MyInitialMigrationName")]
    partial class MyInitialMigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("IDeferredDeletion", true)
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Proxies:ChangeTracking", true)
                .HasAnnotation("Proxies:CheckEquality", true)
                .HasAnnotation("Proxies:LazyLoading", false)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReportDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("reportDetails");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.DetailedEntry", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Entry.Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Entry.Id")
                        .IsUnique()
                        .HasFilter("[Entry.Id] IS NOT NULL");

                    b.HasIndex("ProductID");

                    b.ToTable("DetailedEntries");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.DetailedExit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Exit.Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Exit.Id")
                        .IsUnique()
                        .HasFilter("[Exit.Id] IS NOT NULL");

                    b.HasIndex("ProductID");

                    b.ToTable("DetailedExits");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Entry", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("GestionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PartnerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("GestionID");

                    b.HasIndex("PartnerID");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Exit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("GestionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PartnerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("GestionID");

                    b.HasIndex("PartnerID");

                    b.ToTable("Exits");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Gestion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Gestions");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Partner", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Report", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GCRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("GestionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("GestionID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.DetailedEntry", b =>
                {
                    b.HasOne("XAFContaApp.Module.BusinessObjects.Entry", "Entry")
                        .WithOne("DetailedEntry")
                        .HasForeignKey("XAFContaApp.Module.BusinessObjects.DetailedEntry", "Entry.Id");

                    b.HasOne("XAFContaApp.Module.BusinessObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");

                    b.Navigation("Entry");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.DetailedExit", b =>
                {
                    b.HasOne("XAFContaApp.Module.BusinessObjects.Exit", "Exit")
                        .WithOne("DetailedExit")
                        .HasForeignKey("XAFContaApp.Module.BusinessObjects.DetailedExit", "Exit.Id");

                    b.HasOne("XAFContaApp.Module.BusinessObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");

                    b.Navigation("Exit");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Entry", b =>
                {
                    b.HasOne("XAFContaApp.Module.BusinessObjects.Gestion", "Gestion")
                        .WithMany()
                        .HasForeignKey("GestionID");

                    b.HasOne("XAFContaApp.Module.BusinessObjects.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerID");

                    b.Navigation("Gestion");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Exit", b =>
                {
                    b.HasOne("XAFContaApp.Module.BusinessObjects.Gestion", "Gestion")
                        .WithMany()
                        .HasForeignKey("GestionID");

                    b.HasOne("XAFContaApp.Module.BusinessObjects.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerID");

                    b.Navigation("Gestion");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Report", b =>
                {
                    b.HasOne("XAFContaApp.Module.BusinessObjects.Gestion", "Gestion")
                        .WithMany()
                        .HasForeignKey("GestionID");

                    b.Navigation("Gestion");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Entry", b =>
                {
                    b.Navigation("DetailedEntry");
                });

            modelBuilder.Entity("XAFContaApp.Module.BusinessObjects.Exit", b =>
                {
                    b.Navigation("DetailedExit");
                });
#pragma warning restore 612, 618
        }
    }
}
